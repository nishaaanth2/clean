"use client";
// import styles from './style.module.css';
import { motion } from "framer-motion";
import "./style.css";
import React, { useEffect, useRef, useState } from "react";
import {
  CloudArrowUpIcon,
  LockClosedIcon,
  ServerIcon,
} from "@heroicons/react/20/solid";
import Image from "next/image";
import { ReactComponent as ReactLogo } from "../../../public/new.svg";
import { cn } from "@/lib/utils";

export default function Contact() {
  const [cokey, setCokey] = useState(0);

  const items = [
    {
      src: "/carousel/cv1.jpg",
      designItem: "Logo Suite",
    },
    {
      src: "/carousel/b2.jpg",
      designItem: "Custom Icon / Logo Mark",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Color Palette of your choice",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Website (view demo)",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Brand Guidelines",
    },
    {
      src: "/carousel/hr-b.jpg",
      designItem: "Business Card Design",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Letterhead / Envelope Design",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Social Media Template",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Banner Design",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Desktop / Phone Wallpaper",
    },
    {
      src: "/carousel/b3.jpg",
      designItem: "Presentation Template",
    },
  ];
  const containerRef = useRef();
  const imageRefs = useRef(items.map(() => React.createRef()));

  useEffect(() => {
    const options = {
      root: containerRef.current,
      rootMargin: "0px",
      threshold: 0.5,
    };

    let previousIndex = cokey;

    const handleIntersect = (entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          if (Math.round(entry.intersectionRatio) >= options.threshold) {
            // Ensure that the intersection ratio is greater than or equal to the threshold
            if (index !== previousIndex) {
              setCokey(index);
              console.log("inside", index);
            }
          }
        }
      });
    };

    const observer = new IntersectionObserver(handleIntersect, options);

    imageRefs.current.forEach((ref) => {
      observer.observe(ref.current);
    });

    const debounceScroll = debounce(() => {
      observer.disconnect();
      imageRefs.current.forEach((ref) => {
        observer.observe(ref.current);
      });
    }, 100); // Adjust the debounce time as needed

    window.addEventListener("scroll", debounceScroll);

    return () => {
      observer.disconnect();
      window.removeEventListener("scroll", debounceScroll);
    };
  }, [items, cokey]);

  const debounce = (func, wait) => {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  };
  return (
    <div className="relative isolate overflow-hidden  px-6  lg:overflow-visible lg:px-0">
      <div className="mx-auto grid  grid-cols-1     lg:grid-cols-2 lg:items-start ">
        {/* right component */}
        <div className=" p-12 lg:sticky lg:top-0 h-screen lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden ">
          <div className="h-full flex flex-col justify-between ">
            <div>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 862.729 154.4707"
              className="h-16"
            >
              <path
                class="wi-1"
                d="M99.1318,142.7363q-2.2843,0-2.2846-2.666,0-5.8989,20.0883-47.126,20.0868-41.2221,20.0879-47.6982,0-2.6646-2.8559-2.665-8.1892,0-36.3682,24.9433Q84.8486,96.8491,62.1924,125.4092q-22.6611,28.5615-34.4639,28.5615-3.999,0-3.9985-4.7607,3.2351-13.8971,21.1352-34.8448a394.0634,394.0634,0,0,1,41.89-41.7q9.8987-22.6568,9.9013-35.416,0-33.1319-46.65-33.1308A101.02,101.02,0,0,0,28.1094,6.2119Q10.209,9.8316,8.6875,18.97q.3839,10.6656,21.1353,15.4229,8.7561,1.9057,17.518,3.999a41.94,41.94,0,0,1,14.8516,6.4736Q68.2839,49.2481,68.2856,56.1a10.8629,10.8629,0,0,1-1.1425,4.0938Q66,62.7641,64.3823,62.7637q-1.62,0-1.6186-1.9033a4.6522,4.6522,0,0,1,.8569-2.4756,4.3491,4.3491,0,0,0,.8569-2.0948q0-5.3291-22.4682-10.8535Q32.4857,43.1514,23.0635,40.2A48.6537,48.6537,0,0,1,7.0688,32.0127Q.5,26.7787.5,20.4932t6.188-10.377a43.8421,43.8421,0,0,1,15.5185-5.998A165.5415,165.5415,0,0,1,54.1953.5q23.6082,0,37.7012,9.5205,14.0889,9.5229,14.09,28.1807,0,8.5679-5.522,23.04Q131.12,36.6772,139.69,36.6777a5.7293,5.7293,0,0,1,4.2841,1.9043,6.5266,6.5266,0,0,1,1.8086,4.6651q0,2.7627-3.6176,12.4717t-16.47,37.32q-12.8524,27.6108-12.8525,27.99c0,.2559.19.5088.5708.7617q1.1426,0,3.6182-3.4277Q135.4973,92.6583,172.44,58.67q36.9375-33.9873,63.9776-45.7929,5.52-2.2852,8.3779-2.2852t2.8565,1.999q0,1.9995-2.4756,3.4278T236.7031,21.54a89.614,89.614,0,0,0-7.9018,5.8077q-1.9057,1.7138-2.666,1.7138-.7632,0-.9522-1.1426-.1918-1.1425-.8564-1.1425a7.2843,7.2843,0,0,0-2.19.5713q-23.0412,10.8529-58.646,45.1269-37.5139,36.3722-52.9341,59.0274-5.5246,7.9965-7.9018,9.6152A7.6173,7.6173,0,0,1,99.1318,142.7363ZM32.87,147.1152q7.0424,0,22.3731-20.4687A289.7462,289.7462,0,0,0,82.7568,81.6143a451.1428,451.1428,0,0,0-36.0825,38.6533q-14.95,18.28-14.9472,25.7051A1.01,1.01,0,0,0,32.87,147.1152Z"
              />
              <path
                class="wi-2"
                d="M152.3433,139.9V57.4326h8.97V139.9Zm40.1523,0V107.874q0-8.0727-3.456-12.1885T178.0913,91.57a18.8632,18.8632,0,0,0-8.7851,1.9522,14.7715,14.7715,0,0,0-5.8829,5.3291,14.13,14.13,0,0,0-2.11,7.65l-5.6987-1.7413a19.9717,19.9717,0,0,1,3.14-10.9482,22.6522,22.6522,0,0,1,8.6-7.8613,25.7543,25.7543,0,0,1,12.3731-2.9287q10.0765,0,15.9077,6.0673,5.8293,6.0688,5.83,16.7784V139.9Z"
              />
              <path
                class="wi-2"
                d="M236.6572,140.9561A28.66,28.66,0,0,1,225.498,138.95a16.618,16.618,0,0,1-7.413-5.7773,15.38,15.38,0,0,1-2.6382-9.0489,14.4743,14.4743,0,0,1,2.8491-9.1543,18.5527,18.5527,0,0,1,8.02-5.7246,44.5345,44.5345,0,0,1,12.03-2.7431,131.3009,131.3009,0,0,0,14.7207-2.084q4.3791-1.03,4.3794-3.3506v-.1582a7.9253,7.9253,0,0,0-3.957-7.2549q-3.9573-2.4009-11.45-2.4014-7.8091,0-12.1353,2.7178t-4.3267,8.7852h-8.8642a17.6169,17.6169,0,0,1,3.2187-10.6846,20.1208,20.1208,0,0,1,8.9434-6.7275,38.2911,38.2911,0,0,1,25.59-.2374,19.85,19.85,0,0,1,8.7583,6.1729,15.7467,15.7467,0,0,1,3.2452,10.1045v27.9639q0,1.8471.1582,3.5878a17.2013,17.2013,0,0,0,.5273,3.0606,11.565,11.565,0,0,0,1.0557,2.5586,7.3414,7.3414,0,0,0,.95,1.3457h-9.0225a6.2522,6.2522,0,0,1-.7915-1.24,16.76,16.76,0,0,1-1.0024-2.295,13.4678,13.4678,0,0,1-.5806-2.664,25.7921,25.7921,0,0,1-.2109-3.3506l1.4775,1.0019a15.5137,15.5137,0,0,1-4.7754,5.0127,24.7558,24.7558,0,0,1-7.5713,3.377A38.0226,38.0226,0,0,1,236.6572,140.9561Zm1.4248-8.0733a27.4748,27.4748,0,0,0,9.8135-1.6621,15.7744,15.7744,0,0,0,6.9649-4.9326,12.7007,12.7007,0,0,0,2.5854-8.126V107.0293l2.0049,3.3769a41.8966,41.8966,0,0,1-8.4155,2.1368q-5.0391.8188-10.5264,1.3457-7.9672.74-12.0034,2.7959a7.153,7.153,0,0,0-4.0362,6.9121,7.9457,7.9457,0,0,0,3.3243,6.9385Q231.1172,132.8833,238.082,132.8828Z"
              />
              <path
                class="wi-2"
                d="M301.9238,140.7441a22.167,22.167,0,0,1-5.0654-.58,11.6661,11.6661,0,0,1-4.458-2.084,10.13,10.13,0,0,1-3.14-4.2735,18.6885,18.6885,0,0,1-1.1606-7.1494V91.7812H274.4346v-7.915h8.7588a22.5907,22.5907,0,0,0,2.7963-.1318,2.1385,2.1385,0,0,0,1.4507-.6856,3.2343,3.2343,0,0,0,.5542-1.7412q.1049-1.1865.1055-3.2978V65.2939h9.0225V83.8662H314.64v7.915h-17.517V123.28a18.3374,18.3374,0,0,0,1.0815,7.0176q1.0811,2.5326,4.88,2.5322a15.2766,15.2766,0,0,0,2.9018-.2637,12.9718,12.9718,0,0,0,2.0581-.5273v7.8086a16.9689,16.9689,0,0,1-2.5063.6064A20.4816,20.4816,0,0,1,301.9238,140.7441Z"
              />
              <path
                class="wi-2"
                d="M329.73,71.7314a5.8684,5.8684,0,0,1-4.3-1.583,5.5834,5.5834,0,0,1-1.6094-4.1679A5.789,5.789,0,0,1,325.561,61.68a6.8493,6.8493,0,0,1,5.0127-1.7149,6.1568,6.1568,0,0,1,5.1968,2.2959,9.277,9.277,0,0,1,1.7676,5.83,11.5992,11.5992,0,0,1-1.5825,6.041,15.6737,15.6737,0,0,1-4.063,4.5381,20.6824,20.6824,0,0,1-5.1177,2.875l-1.2139-2.5322a14.3048,14.3048,0,0,0,3.667-2.0576,11.8765,11.8765,0,0,0,2.7964-3.0078,6.3758,6.3758,0,0,0,1.0816-3.4825,2.6773,2.6773,0,0,1-1.108.8184A5.0646,5.0646,0,0,1,329.73,71.7314Z"
              />
              <path
                class="wi-2"
                d="M368.562,140.9561a38.3562,38.3562,0,0,1-9.3652-1.0821,24.505,24.505,0,0,1-7.4922-3.166,15.1777,15.1777,0,0,1-4.96-5.1445,13.7668,13.7668,0,0,1-1.7675-7.0166v-1.6358H354v1.16a7.1025,7.1025,0,0,0,3.9575,6.5166q3.9573,2.2427,10.8159,2.2422a30.7564,30.7564,0,0,0,7.5455-.8438,12.1478,12.1478,0,0,0,5.25-2.5859,5.6524,5.6524,0,0,0,1.9262-4.3789,6.4222,6.4222,0,0,0-4.0893-6.2529,51.61,51.61,0,0,0-12.2144-3.2442,65.39,65.39,0,0,1-8.1255-1.9258,27.9866,27.9866,0,0,1-6.833-3.0869,14.495,14.495,0,0,1-4.6958-4.7226,14.0688,14.0688,0,0,1,1.3194-15.459,19.0012,19.0012,0,0,1,8.2046-5.4346,33.59,33.59,0,0,1,11.5019-1.873,31.7389,31.7389,0,0,1,11.2915,1.9521,19.7438,19.7438,0,0,1,8.31,5.6719,13.7141,13.7141,0,0,1,3.1391,9.1543v1.0556h-8.97v-.7919a6.88,6.88,0,0,0-1.9521-5.0391,12.0294,12.0294,0,0,0-5.065-2.9541,22.1176,22.1176,0,0,0-6.6484-.9766,30.1386,30.1386,0,0,0-6.5425.7129,13.249,13.249,0,0,0-5.3291,2.3477,5.3632,5.3632,0,0,0-2.11,4.4843,5.7382,5.7382,0,0,0,1.9786,4.5645A15.068,15.068,0,0,0,362.2568,106a80.4274,80.4274,0,0,0,8.5215,1.98,73.1283,73.1283,0,0,1,8.2837,1.9785,29.1064,29.1064,0,0,1,6.8853,3.0332,14.0466,14.0466,0,0,1,4.6958,4.67,13.0346,13.0346,0,0,1,1.7148,6.8858,13.4786,13.4786,0,0,1-1.873,7.1758,15.64,15.64,0,0,1-5.1709,5.1171,25.3962,25.3962,0,0,1-7.5977,3.087A39.27,39.27,0,0,1,368.562,140.9561Z"
              />
              <path class="wi-2" d="M432.4565,139.9V62.0762H441.32V139.9Z" />
              <path
                class="wi-2"
                d="M457.2017,139.9V83.8662h8.97V139.9Zm40.1,0V106.08a18.4534,18.4534,0,0,0-1.4776-7.6514,10.8085,10.8085,0,0,0-4.643-5.0644,16.718,16.718,0,0,0-8.2837-1.794,15.8581,15.8581,0,0,0-8.31,2.2949,17.4421,17.4421,0,0,0-6.1206,6.1729,16.72,16.72,0,0,0-2.2949,8.68l-5.1182-1.9522a22.7484,22.7484,0,0,1,3.2451-11.9775,24.48,24.48,0,0,1,8.6529-8.5733,22.7849,22.7849,0,0,1,11.7925-3.1923,24.6276,24.6276,0,0,1,11.3437,2.48,17.8771,17.8771,0,0,1,7.5186,7.0966,21.87,21.87,0,0,1,2.6645,11.1065V139.9Z"
              />
              <path
                class="wi-2"
                d="M548.48,140.9561a30.3073,30.3073,0,0,1-14.5625-3.5088A26.1193,26.1193,0,0,1,523.55,127.3955a30.2941,30.2941,0,0,1-3.8257-15.5644A29.8682,29.8682,0,0,1,523.55,96.3447a25.7357,25.7357,0,0,1,10.3677-9.8926,30.8831,30.8831,0,0,1,14.5625-3.43,29.8921,29.8921,0,0,1,10.9219,1.873,25.06,25.06,0,0,1,8.1254,4.9863,22.7362,22.7362,0,0,1,5.0914,6.8321,17.1589,17.1589,0,0,1,1.7675,7.4131v.37h-8.917a4.1269,4.1269,0,0,0-.0527-.6075q-.0528-.3427-.1055-.7119a11.4511,11.4511,0,0,0-2.6909-6.1992,15.482,15.482,0,0,0-5.9092-4.1953,22.5354,22.5354,0,0,0-17.9658.7129,17.3248,17.3248,0,0,0-7.1758,6.8057,22.2373,22.2373,0,0,0-2.7172,11.5293,22.7353,22.7353,0,0,0,2.6909,11.5546,17.7244,17.7244,0,0,0,7.1494,6.9913,20.5678,20.5678,0,0,0,9.7348,2.3476,21.4882,21.4882,0,0,0,9.3916-1.7939,13.1243,13.1243,0,0,0,5.5665-4.7754,13.4281,13.4281,0,0,0,2.0839-6.41h8.917a18.3957,18.3957,0,0,1-1.6884,7.5713,21.4681,21.4681,0,0,1-4.96,6.8594,24.2821,24.2821,0,0,1-8.0991,4.9336A31.1331,31.1331,0,0,1,548.48,140.9561Z"
              />
              <path class="wi-2" d="M598.0225,57.4326V139.9h-8.8638V57.4326Z" />
              <path
                class="wi-2"
                d="M635.1138,140.9033a21.5937,21.5937,0,0,1-10.0249-2.0849,17.4512,17.4512,0,0,1-6.3575-5.4082,21.4542,21.4542,0,0,1-3.3242-7.2012,30.5441,30.5441,0,0,1-.976-7.4668V83.8662h9.0224v32.7129a25.398,25.398,0,0,0,1.187,7.915,11.7822,11.7822,0,0,0,4.1416,5.8829q2.9547,2.2426,8.1255,2.2421a13.1548,13.1548,0,0,0,8.4951-2.9287,20.27,20.27,0,0,0,5.6983-7.334,20.6088,20.6088,0,0,0,2.0576-8.7841l5.2236,2.1631a26.25,26.25,0,0,1-1.6357,9.1015,27.1784,27.1784,0,0,1-4.6695,8.0986,22.7262,22.7262,0,0,1-7.3339,5.8038A21.1245,21.1245,0,0,1,635.1138,140.9033ZM653.1587,139.9V83.8662h8.97V139.9Z"
              />
              <path
                class="wi-2"
                d="M700.855,140.9561a24.693,24.693,0,0,1-12.6631-3.3506,24.01,24.01,0,0,1-9.1807-9.8672q-3.43-6.5157-3.43-15.9072,0-9.233,3.4825-15.6709a24.192,24.192,0,0,1,21.791-13.1377,25.0534,25.0534,0,0,1,12.1616,3.0869,24.6225,24.6225,0,0,1,9.1543,8.5732,23.2208,23.2208,0,0,1,3.4824,12.7158v.6338l-6.437.2637v-.6865a14.8693,14.8693,0,0,0-2.4009-8.2832,17.7667,17.7667,0,0,0-6.3047-5.8828,16.8777,16.8777,0,0,0-8.39-2.19,16.5782,16.5782,0,0,0-12.3989,5.0391q-4.9073,5.0391-4.9068,15.5391,0,10.4457,4.9331,15.538a17.4842,17.4842,0,0,0,20.9468,2.8233,17.4449,17.4449,0,0,0,6.2-6.0947,16.201,16.201,0,0,0,2.3213-8.5733l6.437.1582a25.2169,25.2169,0,0,1-3.3237,12.9,24.7935,24.7935,0,0,1-8.9434,9.0488A24.15,24.15,0,0,1,700.855,140.9561ZM719.2163,139.9V57.4326h9.0225V139.9Z"
              />
              <path
                class="wi-2"
                d="M746.9155,115.4717v-8.02h43.3179l-1.5825,2.6386v-1.1611a19.5009,19.5009,0,0,0-2.0318-8.8906,15.7044,15.7044,0,0,0-6.041-6.4629,18.8465,18.8465,0,0,0-9.9194-2.4277,21.1815,21.1815,0,0,0-10.5,2.5332,17.8414,17.8414,0,0,0-7.07,7.1494,22.5456,22.5456,0,0,0-2.5327,11.001,23.86,23.86,0,0,0,2.4536,11.1855,17.2112,17.2112,0,0,0,6.9907,7.2285,21.7425,21.7425,0,0,0,10.7637,2.5322,28.5506,28.5506,0,0,0,7.7031-.9228,16.9275,16.9275,0,0,0,5.4082-2.4805,11.7631,11.7631,0,0,0,3.2451-3.4033,9.1841,9.1841,0,0,0,1.3189-3.6934h8.97a16.3567,16.3567,0,0,1-2.11,6.7012,20.7,20.7,0,0,1-5.2236,6.041,26.3535,26.3535,0,0,1-8.2837,4.3535,35.6993,35.6993,0,0,1-11.291,1.6358,29.37,29.37,0,0,1-14.8794-3.6934,26.5252,26.5252,0,0,1-10.104-10.2363,30.2275,30.2275,0,0,1-3.667-15.0371,30.1249,30.1249,0,0,1,3.6934-15.1162,26.6615,26.6615,0,0,1,10.1836-10.21,29.4436,29.4436,0,0,1,14.8261-3.6933,28.329,28.329,0,0,1,14.7207,3.6933,25.18,25.18,0,0,1,9.6026,10.1035,30.8368,30.8368,0,0,1,3.3769,14.5889q0,.8453-.0527,2.2168a12.7179,12.7179,0,0,1-.1582,1.8467Z"
              />
              <path
                class="wi-2"
                d="M835.3452,140.9561a24.693,24.693,0,0,1-12.6631-3.3506,24.0093,24.0093,0,0,1-9.1806-9.8672q-3.43-6.5157-3.43-15.9072,0-9.233,3.4824-15.6709a24.192,24.192,0,0,1,21.791-13.1377,25.0532,25.0532,0,0,1,12.1616,3.0869,24.6225,24.6225,0,0,1,9.1543,8.5732,23.2209,23.2209,0,0,1,3.4825,12.7158v.6338l-6.4371.2637v-.6865a14.87,14.87,0,0,0-2.4008-8.2832,17.7676,17.7676,0,0,0-6.3047-5.8828,16.8778,16.8778,0,0,0-8.39-2.19,16.5782,16.5782,0,0,0-12.3989,5.0391q-4.9072,5.0391-4.9067,15.5391,0,10.4457,4.9331,15.538a17.484,17.484,0,0,0,20.9467,2.8233,17.446,17.446,0,0,0,6.2-6.0947,16.2018,16.2018,0,0,0,2.3212-8.5733l6.4371.1582a25.217,25.217,0,0,1-3.3238,12.9,24.7932,24.7932,0,0,1-8.9433,9.0488A24.15,24.15,0,0,1,835.3452,140.9561ZM853.7065,139.9V57.4326h9.0225V139.9Z"
              />
            </svg>
            <div className="text-lg font-light py-10 pl-4 space-y-0.5">
              {items.map((item, index) => (
                <div key={index} className="flex items-end space-x-2 w-fit">
                  {index < items.length && (
                    <div className="font-extralight text-2xl">+ </div>
                  )}{" "}
                  <div
                    className={cn(
                      cokey === index &&
                        "font-medium transition-all duration-300"
                    )}
                  >
                    {item.designItem}
                  </div>
                </div>
              ))}
            </div>
            </div>
            <div>
            <div className="text-xl w-fit">
              Price: Rs.60,000
              <br />
              SOLD ONLY ONCE{" "}
              <span className="text-xs italic text-neutral-700 w-fit">
                (first come first serve basis)
              </span>
            </div>

            <div className="w-fit">Write to us if you&apos;d like to Purchase this Brand</div>
            </div>
          </div>
        </div>
        {/* left Component */}
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-2  lg:grid lg:w-1/2 lg:grid-cols-1 ">
          {items.map((item, index) => (
            <div key={index} ref={imageRefs.current[index]}>
              <Image
                className={`w-full h-screen object-cover ${
                  index === cokey ? "active" : ""
                }`}
                src={item.src}
                alt=""
                width={500}
                height={500}
              />
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}
